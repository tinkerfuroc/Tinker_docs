"use strict";(self.webpackChunktinker_wiki=self.webpackChunktinker_wiki||[]).push([[1863],{2955:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=n(4848),s=n(8453);const i={last_update:{date:"8/1/2024",author:"CabbageDog"}},r="An Intro to tmuxinator",a={id:"Intro/tmuxinator_intro",title:"An Intro to tmuxinator",description:"You should be familiar with tmux before reading this. If not, read this doc first.",source:"@site/docs/Intro/tmuxinator_intro.md",sourceDirName:"Intro",slug:"/Intro/tmuxinator_intro",permalink:"/tinkerdocs/docs/Intro/tmuxinator_intro",draft:!1,unlisted:!1,editUrl:"https://github.com/tinkerfuroc/tinkerdocs/docs/Intro/tmuxinator_intro.md",tags:[],version:"current",lastUpdatedBy:"CabbageDog",lastUpdatedAt:17224704e5,frontMatter:{last_update:{date:"8/1/2024",author:"CabbageDog"}},sidebar:"tutorialSidebar",previous:{title:"Tmux Get Started",permalink:"/tinkerdocs/docs/Intro/tmux_get_started"},next:{title:"\u4ece\u96f6\u5f00\u59cb\u7684\u6587\u6863\u7f51\u7ad9\u642d\u5efa",permalink:"/tinkerdocs/docs/Intro/\u4ece\u96f6\u5f00\u59cb\u7684\u6587\u6863\u7f51\u7ad9\u642d\u5efa"}},c={},l=[{value:"Installation",id:"installation",level:2},{value:"Basic Commands",id:"basic-commands",level:2},{value:"<code>tmuxinator</code> Project",id:"tmuxinator-project",level:2},{value:"Layout Trick",id:"layout-trick",level:3},{value:"Trouble Shooting",id:"trouble-shooting",level:2},{value:"Copy-Paste",id:"copy-paste",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.h1,{id:"an-intro-to-tmuxinator",children:["An Intro to ",(0,o.jsx)(t.code,{children:"tmuxinator"})]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["You should be familiar with ",(0,o.jsx)(t.code,{children:"tmux"})," before reading this. If not, read ",(0,o.jsx)(t.a,{href:"/tinkerdocs/docs/Intro/tmux_get_started",children:"this doc"})," first."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Most of the time, you perform the same sequence of commands to setup Tinker. In navigation, you always start chassis, then lidar, then odometry, etc. Before ",(0,o.jsx)(t.code,{children:"tmux"})," is used. Tinker members use shell scripts to automate this procedure. Tmux templating library provides an easy way to automate running same commands in ",(0,o.jsx)(t.code,{children:"tmux"})," as well as organizing them into specific layout."]}),"\n",(0,o.jsxs)(t.p,{children:["There are many tmux templating library such as ",(0,o.jsx)(t.code,{children:"tmuxp"}),", ",(0,o.jsx)(t.code,{children:"teamocil"}),", ",(0,o.jsx)(t.code,{children:"tmuxinator"}),"... For Tinker, we use ",(0,o.jsx)(t.code,{children:"tmuxinator"})," to make startup templates. It is easy to write and easy to read."]}),"\n",(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsxs)(t.p,{children:["For ",(0,o.jsx)(t.code,{children:"ubuntu"}),", you can install tmuxinator via ",(0,o.jsx)(t.code,{children:"apt"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"sudo apt install tmuxinator\n"})}),"\n",(0,o.jsxs)(t.p,{children:["For more info, check out ",(0,o.jsx)(t.a,{href:"https://github.com/tmuxinator/tmuxinator",children:"tmuxinator's github"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"basic-commands",children:"Basic Commands"}),"\n",(0,o.jsxs)(t.p,{children:["For ",(0,o.jsx)(t.code,{children:"tmuxinator"}),", three commands is all you need! They are:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"tmuxinator new <Project_name> # create project\ntmuxinator edit <Project_name> # edit\ntmuxinator <Project_name> # execute project\n"})}),"\n",(0,o.jsxs)(t.h2,{id:"tmuxinator-project",children:[(0,o.jsx)(t.code,{children:"tmuxinator"})," Project"]}),"\n",(0,o.jsxs)(t.p,{children:['Don\'t be shocked by the name "Project". For user, ',(0,o.jsx)(t.code,{children:"tmuxinator"})," project is nothing but a ",(0,o.jsx)(t.code,{children:".yaml"})," file! When you create a project named ",(0,o.jsx)(t.code,{children:"navigation"})," by :"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-sh",children:"tmuxinator new navigation\n"})}),"\n",(0,o.jsxs)(t.p,{children:["It just creates a ",(0,o.jsx)(t.code,{children:"navigation.yaml"})," in ",(0,o.jsx)(t.code,{children:"~/.config/tmuxinator/"}),"(try by yourself)."]}),"\n",(0,o.jsx)(t.p,{children:"Now we introduce an example to help you understand how this works:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"# /home/tinker/.config/tmuxinator/navigation.yml\n\nname: navigation # project name\nroot: ~/Projects/tk23_navigation # root path of this project, when you run this project, all sessions, windows and panes start from here\n\n# Optional tmux socket\n# socket_name: foo\n\n# Note that the pre and post options have been deprecated and will be replaced by\n# project hooks.\n\n# Project hooks\n\n# Runs on project start, always\n# on_project_start: command\n\n# Run on project start, the first time\n# on_project_first_start: command\n\n# Run on project start, after the first time\n# on_project_restart: command\n\n# Run on project exit ( detaching from tmux session )\n# on_project_exit: command\n\n# Run on project stop\n# on_project_stop: command\n\n# Runs in each window and pane before window/pane specific commands. Useful for setting up interpreter versions.\n# pre_window: rbenv shell 2.0.0-p247\n\n# Pass command line options to tmux. Useful for specifying a different tmux.conf.\n# tmux_options: -f ~/.tmux.mac.conf\n\n# Change the command to call tmux.  This can be used by derivatives/wrappers like byobu.\n# tmux_command: byobu\n\n# Specifies (by name or index) which window will be selected on project startup. If not set, the first window is used.\n# startup_window: editor\n\n# Specifies (by index) which pane of the specified window will be selected on project startup. If not set, the first pane is used.\n# startup_pane: 1\n\n# Controls whether the tmux session should be attached to automatically. Defaults to true.\n# attach: false\n\nwindows: # all the windows you want to open, the children's keys are the window names\n    - test1: # First window, named \"test1\"(Don't forget the colon)\n        - . ./install/setup.zsh # The command you want to exec in this window\n        - echo \"Hello world\" # Just shell commands \n    - test2: # Second window\n        layout: main-vertical # Layout of this window, used when there are multiple panes \n         # Synchronize all panes of this window, can be enabled before or after the pane commands run.\n        # 'before' represents legacy functionality and will be deprecated in a future release, in favour of 'after'\n        # synchronize: after\n        panes: # all the windows you want to open, don't forget the colon\n            - teleop_pane: # First pane, named \"teleop_pane\"\n                - . ./install.setup.zsh   \n                - ros2 run teleop_twist_keyboard teleop_twist_keyboard # just normal \n            - navigation_pane:\n                - . ./install/setup.zsh # better source in every pane\n                - ros2 launch xxxx xxxx\n"})}),"\n",(0,o.jsx)(t.h3,{id:"layout-trick",children:"Layout Trick"}),"\n",(0,o.jsx)(t.p,{children:"Default layout is probably not good for our own use, so there is a trick to set the layout as we want:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["First open ",(0,o.jsx)(t.code,{children:"tmux"})," and create panes you needed, then adjust the pane to the layout you want using mouse or commands."]}),"\n",(0,o.jsxs)(t.li,{children:["Display the current layout by ",(0,o.jsx)(t.code,{children:"tmux list-windows"})]}),"\n",(0,o.jsxs)(t.li,{children:["Copy this layout, e.g. ",(0,o.jsx)(t.code,{children:"layout dfdc,190x46,0,0{95x46,0,0,1,94x46,96,0,2}"})]}),"\n",(0,o.jsx)(t.li,{children:"Paste this layout to the project yaml."}),"\n"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["You may find it hard to copy-paste in ",(0,o.jsx)(t.code,{children:"tmux"}),", look at troubleshooting."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"trouble-shooting",children:"Trouble Shooting"}),"\n",(0,o.jsx)(t.h3,{id:"copy-paste",children:"Copy-Paste"}),"\n",(0,o.jsxs)(t.p,{children:["In ",(0,o.jsx)(t.code,{children:"tmux"}),", ",(0,o.jsx)(t.code,{children:"ctrl + shift + c"})," can not copy content. For some configs, you can not even select the content. The solution of mine is to enable mouse in tmux config then use ",(0,o.jsx)(t.code,{children:"tmux-yank"})," plugin."]}),"\n",(0,o.jsxs)(t.p,{children:["To install ",(0,o.jsx)(t.code,{children:"tmux-yank"})," and other useful plugin, I recommend using ",(0,o.jsx)(t.code,{children:"TPM"}),". The usage of ",(0,o.jsx)(t.code,{children:"TPM"})," can be found in ",(0,o.jsx)(t.a,{href:"https://github.com/tmux-plugins/tpm",children:"its github"}),". You can install ",(0,o.jsx)(t.a,{href:"https://github.com/tmux-plugins/tmux-yank?tab=readme-ov-file",children:(0,o.jsx)(t.code,{children:"tmux-yank"})})," via ",(0,o.jsx)(t.code,{children:"TPM"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:["After you installed ",(0,o.jsx)(t.code,{children:"tmux-yank"}),", you need to exit your tmux server to make it work. When you want to copy something, you can use mouse to select the content, then press ",(0,o.jsx)(t.code,{children:"y"})," before you release you mouse and the content you selected will be in you clipboard."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);